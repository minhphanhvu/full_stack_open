{"version":3,"sources":["components/Contract.jsx","components/Form.jsx","components/Filter.jsx","components/contactService.jsx","components/Message.jsx","App.js","reportWebVitals.js","index.js"],"names":["Contract","name","number","destroyContact","id","className","onClick","event","Form","addPerson","newName","addName","newNumber","addNumber","onSubmit","value","onChange","type","Filter","filterContact","htmlFor","baseURL","axios","get","then","response","data","newContact","post","delete","contact","put","Message","message","messageType","App","useState","persons","setPersons","setNewName","setNewNumber","filterContacts","setContacts","setMessage","setMessageType","useEffect","contactService","initialContacts","preventDefault","destroyedContact","find","window","confirm","filteredContacts","filter","filterValue","target","toLowerCase","length","person","includes","existContacts","existContact","mes","updatedContact","map","catch","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df047f68.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Contract = ({ name, number, destroyContact, id }) => {\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      <li>{name} {number}</li>\r\n      <button onClick={(event) => destroyContact(event, id)}>delete</button> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contract;","import React from 'react';\r\n\r\nconst Form = ({ addPerson, newName, addName, newNumber, addNumber }) => {\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n            name: <input value={newName} onChange={addName} type=\"text\" />\r\n        </div>\r\n        <div>\r\n            number: <input value={newNumber} onChange={addNumber} type=\"text\"/>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Filter = ({ filterContact }) => {\r\n \r\n  return (\r\n    <div>\r\n      <label htmlFor=\"filter\">filter shown with</label>\r\n      <input name=\"filter\" id=\"filter\" type=\"text\" onChange={filterContact} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter;","import axios from 'axios';\r\nconst baseURL = '/api/persons';\r\n\r\nconst getAllContacts = () => {\r\n  const request = axios.get(baseURL);\r\n  return request.then(response => response.data); \r\n}\r\n\r\nconst createContact = newContact => {\r\n  const request = axios.post(baseURL, newContact);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst destroyContact = id => {\r\n  const request = axios.delete(baseURL + `/${id}`);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst updateContact = (id, contact) => {\r\n  const request = axios.put(baseURL + `/${id}`, contact);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAllContacts, createContact, destroyContact, updateContact };","import React from 'react';\r\n\r\nconst Message = ({ message, messageType }) => {\r\n  if (!message) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div className={messageType}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Message;","import React, { useState, useEffect } from 'react';\nimport Contract from './components/Contract.jsx';\nimport Form from './components/Form.jsx';\nimport Filter from './components/Filter.jsx';\nimport contactService from './components/contactService.jsx';\nimport Message from './components/Message.jsx';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterContacts, setContacts ] = useState([])\n  const [ message, setMessage ] = useState('')\n  const [ messageType, setMessageType ] = useState('')\n\n  // 'RESTful' handling resources\n\n  // Extract db.json (all contacts) from server\n  useEffect(() => {\n    contactService\n      .getAllContacts()\n      .then(initialContacts => {\n        setPersons(initialContacts);\n        setContacts(initialContacts);\n      })\n  }, [])\n\n  // Add new contact to the db.json + update the contact\n  const addPerson = (event) => {\n    event.preventDefault();\n    const contact = {\n      name: newName,\n      number: newNumber\n    }\n\n    const existContacts = persons.filter((person) => person.name === contact.name)\n    const existContact = existContacts[0];\n\n    if (existContacts.length > 0) {\n      const mes = `${newName} is already added to phonebook, replace the old number with \n                   a new one?`;\n      const confirm = window.confirm(mes);\n      if (confirm) {\n        contactService\n          .updateContact(existContact.id, contact)\n          .then(updatedContact => {\n            setMessage(`${updatedContact.name} has been updated.`);\n            setMessageType('success');\n            setContacts(persons.map(contact => contact.name !== updatedContact.name ? contact : updatedContact));\n          })\n          .catch(() => {\n            setMessage(`${contact.name} information has already been removed from the server.`);\n            setMessageType('error');\n            setContacts(persons.filter(contact => contact.name !== existContact.name));\n          })\n      }\n    } else {\n        contactService\n          .createContact(newContact)\n          .then(newContact => {\n            setMessage(`${newContact.name} has been added.`);\n            setMessageType('success');\n            setPersons(persons.concat(newContact));\n            setContacts(filterContacts.concat(newContact));\n          })\n    }\n    setNewName('');\n    setNewNumber('');\n  }\n\n  // Delete a contact\n  const destroyContact = (event, id) => {\n    event.preventDefault();\n    const destroyedContact = persons.find((contact) => contact.id === id);\n    const confirm = window.confirm(`Delete ${destroyedContact.name} contact?`);\n    if (confirm) {\n      contactService\n        .destroyContact(id)\n        .then(() => {\n          const filteredContacts = persons.filter((contact) => contact.id !== id);\n          setPersons(filteredContacts);\n          setContacts(filteredContacts);\n          setMessage(`${destroyedContact.name}'s contact has been deleted.`);\n          setMessageType('error');\n        })\n    }\n  }\n\n  // Helpers event handler + filter handler\n  const addName = (event) => {\n    event.preventDefault();\n    setNewName(event.target.value)\n  }\n\n  const addNumber = (event) => {\n    event.preventDefault();\n    setNewNumber(event.target.value, 10)\n  }\n\n  const filterContact = (event) => {\n    event.preventDefault();\n    const filterValue = event.target.value.toLowerCase()\n\n    if (filterValue.length === 0){\n      setContacts(persons)\n    } else {\n      setContacts(persons.filter(person => person.name.toLowerCase().includes(filterValue)))\n    }\n  }\n\n  return (\n    <div>\n      {/*Filter function*/}\n      <h2>Phonebook</h2>\n      <Message message={message} messageType={messageType} />\n      <Filter filterContact={filterContact}/>\n\n      {/*Add new contact*/}\n      <h3>Add a new contact</h3>\n      <Form addPerson={addPerson} newName={newName} addName={addName}\n            newNumber={newNumber} addNumber={addNumber} />\n\n      {/*Contacts (filtered)*/}\n      <h2>Numbers</h2>\n      <ul>\n        {filterContacts.map(contact => <Contract key={contact.id}\n                                                 id={contact.id}\n                                                 name={contact.name}\n                                                 number={contact.number} \n                                                 destroyContact={destroyContact} />)}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}